



LWIG                                                      R. Jadhav, Ed.
Internet-Draft                                                  R. Sahoo
Intended status: Informational                               Huawei Tech
Expires: June 15, 2017                                      S. Duquennoy
                                                                   Inria
                                                             J. Eriksson
                                                                    SICS
                                                       December 12, 2016


                 Neighbor Management Policy for 6LoWPAN
                  draft-jadhav-lwig-nbr-mgmt-policy-00

Abstract

   This document describes the problems associated with neighbor
   management in constrained multihop networks and a sample neighbor
   management policy to deal with it.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on June 15, 2017.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of



Jadhav, et al.            Expires June 15, 2017                 [Page 1]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements Language and Terminology . . . . . . . . . .   4
   2.  Neighbor Management . . . . . . . . . . . . . . . . . . . . .   5
     2.1.  Significance of Neighbor management policy  . . . . . . .   5
     2.2.  Trivial neighbor management policies  . . . . . . . . . .   6
     2.3.  Lifecycle of a neighbor entry . . . . . . . . . . . . . .   7
       2.3.1.  Insertion . . . . . . . . . . . . . . . . . . . . . .   7
       2.3.2.  Deletion  . . . . . . . . . . . . . . . . . . . . . .   8
       2.3.3.  Eviction  . . . . . . . . . . . . . . . . . . . . . .   8
         2.3.3.1.  Eviction for directly connected routing entries .   9
       2.3.4.  Reinforcement . . . . . . . . . . . . . . . . . . . .   9
     2.4.  Approaches to neighbor management policy  . . . . . . . .   9
       2.4.1.  Proactive Approach  . . . . . . . . . . . . . . . . .   9
       2.4.2.  Reactive Approach . . . . . . . . . . . . . . . . . .   9
     2.5.  Requirements of a good neighbor management policy . . . .   9
   3.  Reservation based Neighbor Management Policy  . . . . . . . .   9
     3.1.  Updates in table structures . . . . . . . . . . . . . . .  10
     3.2.  Failure handling  . . . . . . . . . . . . . . . . . . . .  10
     3.3.  Limitations of such a policy  . . . . . . . . . . . . . .  10
   4.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  10
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  11
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  11
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .  11
     7.2.  Informative References  . . . . . . . . . . . . . . . . .  11
   Appendix A.  Additional Stuff . . . . . . . . . . . . . . . . . .  12
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  12

1.  Introduction

   In a wireless multihop network, the node densities (maximum number
   devices connected on a single link) may vary significantly depending
   upon deployments/scenarios.  While there is some policy control
   possible with regards to the network size in terms of maximum number
   of devices connected, it is especially difficult to set a figure on
   what will be the maximum node density given a deployment.  For e.g.
   A network can put an upper limit on max 1000 devices but it is
   impossible to state what the node density will be in this 1000 node
   network.

   Every networked node needs to manage the neighbor entries for
   resolving MAC addresses.  Linux and other operating systems have used
   neighbor management policies which essentially are first-come, first-



Jadhav, et al.            Expires June 15, 2017                 [Page 2]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


   serve basis.  In case of Linux, the kernel issues a warning when the
   neighbor table overflows in which case the usual step taken is to
   tune the negighbor cache size.  With constrained nodes, this solution
   does not help.

   A neighbor cache is usually used for populating neighboring one-hop
   connected nodes information such as MAC address, link local IP
   address and other state information.  Node density has direct
   implications on the neighbor cache and in constrained network
   scenario the size of the neighbor cache will be limited.  Thus there
   are chances that a node may not be able to fit all the neighboring
   nodes in its table cache in which case it has to prioritize entries
   and thus needs a neighbor management policy.

   In this draft, we present problems related to neighbor management
   policies by considering a security-enabled multi-hop 6lo network.  We
   specifically consider RPL[RFC6550] as a routing protocol and PANA
   (EAP-PANA)[RFC5191] as a network access protocol.  For RPL, both the
   storing and non-storing mode of operations are considered.  We also
   provide a sample neighbor management policy which can be used in such
   networks with its limitations and assumptions.

   For the rest of this document consider the following topology:




























Jadhav, et al.            Expires June 15, 2017                 [Page 3]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


                                          +--------+
                                          | PAA/   |
                                   +------| Auth   |
                                   |      | Server |
                                   |      +--------+
                      +------------|-------------+
                      |            |             |
                      |          (BR)            |
                      |          / \             |
                      |         /   \            |
                      |        /     \           |
                      |      (N1)   (N2)         |
                      |        :     / \         |
                      |         :   /   \        |
                      |          : /     \       |
                      |          (N3)   (N4)     |
                      |          / \     :       |
                      |         /   \   :        |
                      |        /     \ :         |
                      |      (N5)   (New)        |
                      |      / \                 |
                      |     /   \                |
                      |    /     \               |
                      |  (N6)   (N7)             |
                      |                          |
                      |        6Lo Network       |
                      +--------------------------+

                              Sample Topology

                                 Figure 1

1.1.  Requirements Language and Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

   PaC: PANA Client.  New joining node which is yet to be authenticated.

   PRE: PANA Relay Element.  An already authenticated and network joined
   node which acts as a relay element for PaCs.

   PAA: PANA Auth Agent.  Auth server which hosts the credentials
   database.  PaC will handshake with PAA to complete authentication
   procedure.





Jadhav, et al.            Expires June 15, 2017                 [Page 4]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


   Routing Child: A downstream node who is part of the routing table of
   the parent.  For e.g. in the sample topology above N5 is the directly
   connected routing child for N3.  N6 and N7 are also part of N3
   routing table, they are routing child nodes but not directly
   connected.  For N6 and N7 the document might alternatively use a term
   grand-child.

   Routing Parent: In the sample topology (Figure 1), N1 and N2 are
   possible routing parents for N3.

   Neighbor Cache Entry (NCE): A neighbor entry managed on behalf of
   directly connected peer.

   This document also uses terminology described in [RFC6550] and
   [RFC6775].

2.  Neighbor Management

2.1.  Significance of Neighbor management policy

   Multihop mesh networks present unique challenges to neighbor
   management especially with resource constrained nodes.  In cases
   where the node density is higher that the neighbor cache size, the
   entries have to be prioritized.  [Woo_et_al] and [Dawans_et_al] talk
   about prioritization of neighbor entries by using link quality
   estimation techniques.  But prioritization alone may not necessarily
   be optimal in all cases.  The reason or function why neighbor entry
   was added also needs to be taken in consideration.  For example,
   evicting a routing direct child might have a ripple effect in turn
   impacting all the sub-childs as well.

   In case of key management protocols deployed above MAC layer in
   multihop network, the neighbor management kicks in early even before
   the routing adjacencies are established.  Since a new joining node
   needs to discover/attach to a relay element for completing its
   authentication procedure, the neighbor table entries have to be
   appropriately populated both on a PaC and on the PRE.  If a neighbor
   entry whose authentication is in progress is evicted, it may increase
   the authentication time drastically.

   Another important consideration is that with increased node density,
   the prioritization based on link estimation parameters might not help
   since there might be more well connected peers.  In dense deployments
   the number of directly attached neighbors with good quality links
   might still be higher than the max entries in neighbor cache size.






Jadhav, et al.            Expires June 15, 2017                 [Page 5]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


2.2.  Trivial neighbor management policies

   This section investigates policies which are used by most of the
   current operating systems for constrained nodes.  While such policies
   are trivial to implement they may not be able to deal with the
   constrained network scenario.  Note that such policies can still be
   utilized or deployed if it is known apriori that the neighbor table
   can hold entries for maximum node density.

   a.  First Come First Serve (FCFS) policy

   b.  Least Recently Used (LRU) policy

   The primary distinction between these policies is how it treats a new
   entry when the neighbor table is full.  In case of FCFS policy, the
   new entry is simply rejected while in the case of LRU, the new entry
   replaces the least recently used entry.

   RPL works by initiating a downstream multicast DIO to establish
   upstream network path.  Subsequently DAO messages might be sent by
   the nodes to establish downstream paths to the nodes.  Thus the
   network is flooded with multicast DIO messages initially and
   similarly there are chances that the same node is end up been
   selected as a preferred parent by most of the child nodes and thus
   receives a DAO message from all these child nodes.  Note that once a
   node establishes a parent entry or a routing entry on behalf of a
   directly connected node then it has to also provision a neighbor
   table entry for it for subsequent unicast traffic.

   In case of FCFS policy, a node might end up hosting all the neighbor
   entries based on DIO or DAO messages.  Once the table is full and if
   the node has to switch its parent node, then establishing a neighbor
   entry would mean evicting some existing entry.

   In case of LRU policy, a node might end up churning lot of neighbor
   entries because once the table gets full and there is a request for
   new entry, it would result in evicting the least recently used (but
   active) entry.  If at later point of time, there is a traffic for the
   evicted entry then the old entry has to be reinstated using IPv6 NDP
   procedure.  This would mean reinstating the entry by evicting another
   least recently used entry.  If the node density is very high, then
   this churn would be substantially high to extent that it would
   disrupt any routing adjacencies to be established in the network in a
   stable way.







Jadhav, et al.            Expires June 15, 2017                 [Page 6]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


2.3.  Lifecycle of a neighbor entry

2.3.1.  Insertion

   IPv6 NDP [RFC6775] defines signaling involved in resolving the IPv6
   addresses to its corresponding MAC addresses which in turn gets
   populated in the neighbor table.  In case of constrained network, it
   is desired that such control traffic is minimized and thus the
   neighbor table entries are populated as part of existing messaging.
   One example would be when the node receives a DAO message from its
   immediate child node, it not only makes an addition to the routing
   table but also creates a neighbor table entry for the node.  Thus it
   eliminates need for additional IPv6 NDP NS/NA messaging involved to
   resolve MAC address.  Similar hueristic is made use to add neighbor
   entries in other cases as well.  Following are the possible signaling
   scenarios in which case a neighbor entry may get added.

   Node Joining procedure: A new joinee node discovers a relay element
   to initiate its authentication procedure.  At the end of the
   discovery phase the new joinee node would have known the link local
   IP address of the relay element and a corresponding entry in the
   neighbor table would be added.

   The PANA relay element (PRE) on reception of signaling message may
   decide to allow the new joining node to initiate the authentication
   procedure through itself.  Relay element does not hold any state
   information on behalf of the new joinee node except for its neighbor
   table entry.  Thus in the Figure 1 the new joinee node may select
   node N3 as its PRE, in which case N3 has to add a neighbor entry on
   behalf of the new joinee node.

   Post authentication the node enters into network discovery phase.
   The node selects one or more of its neighboring peer as its preferred
   parent based on the DIO received from these peers.  Note that the
   node's selected relay element and its preferred parent may not be the
   same.  The preferred parent serves as a default router node to which
   all its upstream traffic is directed.  Thus a neighbor entry on
   behalf of preferred parent needs to be added.  In Figure 1 node N5
   selects N3 as its preferred parent.  This case N5 needs to add
   neighbor entry on behalf of N3 which is its directly connected RPL
   preferred parent.

   On selection of preferred parent, the node may send a DAO message to
   its preferred parent all the way to the root to estalish a downstream
   path.  The preferred parent thus has to maintain a neighbor entry on
   behalf of the directly connected child node.  For example, in the
   Figure 1, node N3 needs to maintain a neighbor entry on behalf of N5




Jadhav, et al.            Expires June 15, 2017                 [Page 7]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


   which is its directly connected child node.  Nodes N6 and N7 are
   grand-child nodes for node N3 for whom no neighbor entry is required.

   IPv6 NDP procedures might still be used in cases where the neighbor
   entry needs to be refreshed on lifetime expiry.

   This document expects the neighbor management policy to remember the
   reason why the neighbor entry is inserted.  As described in the later
   sections, this reason will help the policy to prioritize the entries
   in case an eviction is forced.

2.3.2.  Deletion

   It is imperative that an unwanted neighbor entry be removed as soon
   as possible.  This section talks about different cases in which
   neighbor entry can be deleted.

   Route Invalidation: When the child node decides to change its
   preferred parent, the RPL specifications allows the node to send a
   no-path DAO message to invalidate the route along the previous
   path(s).  A directly connected parent node can use this message to
   clear the neighbor entry.  While the entry can be immediately
   cleared, usually the implementations choose to wait a small amount of
   time before clearing the entry.  This is to avoid any impact on the
   in-transit traffic.  Thus this also establishes the importance of
   route invalidation to achieve optimized neighbor table utilization.

   [RFC6775], ND optimizations for 6LoWPANs, section 5.5.3. talks about
   deleting the entries in case the NUD (neighbor unreachability
   detection) fails either due to no response to NS messages or due to
   failure response.  Neighbor entries in such cases should be deleted.
   An example where NUD NS would fail because of no response is the case
   where the child node swtiches its parent due to link unavailability.
   The parent in such a case would not receive the no-path DAO message
   or any other traffic from the child node.  Thus on entry lifetime
   expiry, the parent node would send NS which would fail with no
   response, thus triggering entry deletion.

2.3.3.  Eviction

   The eviction rules have a major impact on the neighbor management
   policy.  Eviction rules are used when the policy has to forcibly
   remove an active neighbor entry from the table to make space for the
   new (hopefully higher priority) entry.  The eviction policy may take
   into account several considerations such as the reason why the entry
   was made, is the entry in active use currently, how good (for e.g.,
   based on link estimation) the entry currently is.




Jadhav, et al.            Expires June 15, 2017                 [Page 8]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


2.3.3.1.  Eviction for directly connected routing entries

   Impact of direct child eviction

2.3.4.  Reinforcement

   talk about how to maintain entry freshness, estimation parameters etc

   Sample mechanism employed by Contiki for link estimation and
   reinforcement.

   Role of link estimation techniques to prioritize.

2.4.  Approaches to neighbor management policy

2.4.1.  Proactive Approach

   Is it possible for the child nodes to select parents according to
   their space availability?  In this case, parents need to advertise
   the free space availability.  This is a complex scheme ...blah blah

2.4.2.  Reactive Approach

   Nodes try to join and then fail if space is not available.  Easier to
   implement, more deterministic ... blah

2.5.  Requirements of a good neighbor management policy

   a.  Easy to implement

   b.  Less control overhead

   c.  stability of paths, deterministic routes

   d.  blah

   blahblah.

3.  Reservation based Neighbor Management Policy

   Reservation for direct children and pre-auth entries.  Parent nodes
   can still occupy the reserved entries since they could be evicted if
   necessary.  Describe the actual policy here.








Jadhav, et al.            Expires June 15, 2017                 [Page 9]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


     <- - - - - - - - - - - Routing Parents - - - - - - - - - - - - ->
     +----------------------+----------------------------------------+
     |                      |                              |         |
     +----------------------+------------------------------+---------+
       Routing Direct-Child                                  Pre-Auth

                Reservation for neighbors based on function

                                 Figure 2

3.1.  Updates in table structures

   Show various fields of neighbor table, routing table and their
   relation.  Explain newly added fields such as Reason field.  Storing
   mode table mapping: Non-storing mode table mapping:

3.2.  Failure handling

   How to handle DAO rejection when NBR table is full?

   How to handle PANA rejection when NBR table is full?

   How to handle NS rejection when NBR table is full?  What does
   6Lowpan-ND say in the context?

3.3.  Limitations of such a policy

   May result in sub-optimal paths.

   Certain scenarios where node density is not high enough, it may
   result in some nodes getting starved i.e. never able to get any free
   slot and thus never able to join.

4.  Acknowledgements

   This template was derived from an initial version written by Pekka
   Savola and contributed by him to the xml2rfc project.

   This document is part of a plan to make xml2rfc indispensable
   [DOMINATION].

5.  IANA Considerations

   This memo includes no request to IANA.

   All drafts are required to have an IANA considerations section (see
   the update of RFC 2434 [I-D.narten-iana-considerations-rfc2434bis]
   for a guide).  If the draft does not require IANA to do anything, the



Jadhav, et al.            Expires June 15, 2017                [Page 10]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


   section contains an explicit statement that this is the case (as
   above).  If there are no requirements for IANA, the section will be
   removed during conversion into an RFC by the RFC Editor.

6.  Security Considerations

   All drafts are required to have a security considerations section.
   See RFC 3552 [RFC3552] for a guide.

7.  References

7.1.  Normative References

   [Dawans_et_al]
              Dawans, S., Duquennoy, S., and O. Bonaventure, "On Link
              Estimation in Dense RPL Deployments", 2012.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [Woo_et_al]
              Woo, A., Tong, T., and D. Culler, "Taming the Underlying
              Challenges of Reliable Multihop Routing in Sensor
              Networks", 2003.

7.2.  Informative References

   [DOMINATION]
              Mad Dominators, Inc., "Ultimate Plan for Taking Over the
              World", 1984, <http://www.example.com/dominator.html>.

   [I-D.narten-iana-considerations-rfc2434bis]
              Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", draft-narten-iana-
              considerations-rfc2434bis-09 (work in progress), March
              2008.

   [RFC3552]  Rescorla, E. and B. Korver, "Guidelines for Writing RFC
              Text on Security Considerations", BCP 72, RFC 3552,
              DOI 10.17487/RFC3552, July 2003,
              <http://www.rfc-editor.org/info/rfc3552>.

   [RFC5191]  Forsberg, D., Ohba, Y., Ed., Patil, B., Tschofenig, H.,
              and A. Yegin, "Protocol for Carrying Authentication for
              Network Access (PANA)", RFC 5191, DOI 10.17487/RFC5191,
              May 2008, <http://www.rfc-editor.org/info/rfc5191>.



Jadhav, et al.            Expires June 15, 2017                [Page 11]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


   [RFC6550]  Winter, T., Ed., Thubert, P., Ed., Brandt, A., Hui, J.,
              Kelsey, R., Levis, P., Pister, K., Struik, R., Vasseur,
              JP., and R. Alexander, "RPL: IPv6 Routing Protocol for
              Low-Power and Lossy Networks", RFC 6550,
              DOI 10.17487/RFC6550, March 2012,
              <http://www.rfc-editor.org/info/rfc6550>.

   [RFC6775]  Shelby, Z., Ed., Chakrabarti, S., Nordmark, E., and C.
              Bormann, "Neighbor Discovery Optimization for IPv6 over
              Low-Power Wireless Personal Area Networks (6LoWPANs)",
              RFC 6775, DOI 10.17487/RFC6775, November 2012,
              <http://www.rfc-editor.org/info/rfc6775>.

Appendix A.  Additional Stuff

   This becomes an Appendix.

Authors' Addresses

   Rahul Arvind Jadhav (editor)
   Huawei Tech
   Kundalahalli Village, Whitefield,
   Bangalore, Karnataka  560037
   India

   Phone: +91-080-49160700
   Email: rahul.ietf@gmail.com


   Rabi Narayan Sahoo
   Huawei Tech
   Kundalahalli Village, Whitefield,
   Bangalore, Karnataka  560037
   India

   Phone: +91-080-49160700
   Email: rabinarayan@huawei.com


   Simon Duquennoy
   Inria
   40 Avenue Halley
   Building A
   Villeneuve d'Ascq
   France

   Phone: +33 768227731
   Email: simon.duquennoy@inria.fr



Jadhav, et al.            Expires June 15, 2017                [Page 12]

Internet-Draft   Neighbor Management Policy for 6LoWPAN    December 2016


   Joakim Eriksson
   SICS
   TODO
   TODO

   Email: joakime@sics.se













































Jadhav, et al.            Expires June 15, 2017                [Page 13]
